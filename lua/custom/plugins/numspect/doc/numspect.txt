*numspect.txt*                                                Number inspector

==============================================================================
Table of Contents                                 *numspect-table-of-contents*

1. Numspect                                                |numspect-numspect|
  - Install                                        |numspect-numspect-install|
  - Configuration                            |numspect-numspect-configuration|
  - Usage                                            |numspect-numspect-usage|

==============================================================================
1. Numspect                                                *numspect-numspect*

Number inspection plugin. This plugin was originally developed to help convert
between hex and IEC representations when designing memory layouts.


INSTALL                                            *numspect-numspect-install*

The plugin is entirely written in lua, it has no special dependencies. To
install using lazy

>lua
      {
        dir = '<yourdirectory>',
        opts = {},
      }
<


CONFIGURATION                                *numspect-numspect-configuration*

>lua
    Default configuration
    local options = {
      use_hover = true, -- If true the inspection is shown in a hovering window, otherwise only printed
      mappings = {
        ['?'] = 'trigger', -- The main (and only atm) action that shows the number inspection
      },
    }
<

To edit the configuration pass a table to the `setup` function. In lazy this
can be done with the `opts` parameter. The doesnâ€™t have to contain all
parameters just the ones that you want to override.


USAGE                                                *numspect-numspect-usage*

You can open a hovering window that displays the inspected number by pressing
`?`. The window automatically disappears when moving the cursor. The number in
the following formats:

- as passed literally
- as hex
- as decimal
- as iec size with unit (KiB, MiB etc., powers of 1024)

Eg.:

>
    0x12000 becomes
     0x12000: 0x12000     73728     72.000KiB
<

By pressing `?` again you can enter the hovering window to copy parts of the
inspection. This way you can copy and paste different representations easily.
You can exit the window by pressing one of `<Esc> <CR> <leader> j k`.

By default the plugin parses the word the cursor is on. You can also use it in
visual mode, and the selected text is passed to the plugin.

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
